{"version":3,"sources":["components/Card/Card.jsx","components/CardsContainer/CardsContainer.jsx","fetchSample.js","components/InspectorPopup/InspectorPopup.jsx","App.js","store.js","index.js"],"names":["Card","iconSrc","header","description","onClick","homeItem","href","className","window","open","style","backgroundImage","CardsContainer","children","MobileCRM","App","useState","inspectorPopup","setInspectorPopup","listItems","parent","document","querySelectorAll","useEffect","handleHomeItem","selector","console","log","find","item","innerHTML","click","store","createStore","state","action","data","type","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a06034b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Card = ({ iconSrc, header, description, onClick, homeItem, href }) => {\r\n    return (\r\n        <div className=\"card\" onClick={onClick ? () => onClick(homeItem) : href ? () => {\r\n            window.open(href);\r\n        } : () => {}}> \r\n            <i className=\"card__icon\" style={{backgroundImage: `url('${iconSrc}')`}}></i>\r\n            <h1 className=\"card__header\">{header}</h1>\r\n            <p className=\"card__description\">{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst CardsContainer = ({ header, description, children }) => {\r\n    return (\r\n        <section className=\"cards-container\">\r\n            <h1 className=\"cards-container__header\">{header}</h1>\r\n            {description\r\n            ? <p className=\"cards-container__description\">{description}</p>\r\n            : null\r\n            }\r\n            <div className=\"cards-container__wrapper\">\r\n                {children}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CardsContainer;","\r\nconst MobileCRM = window.MobileCRM;\r\n\r\nexport default function executeAsync(systemUserId, resolve) {\r\n    var fetchEntity = new MobileCRM.FetchXml.Entity(\"systemuser\");\r\n    fetchEntity.addAttribute(\"internalemailaddress\");\r\n  \r\n    var filter = new MobileCRM.FetchXml.Filter();\r\n    filter.type = \"and\";\r\n\r\n    var cond1 = new MobileCRM.FetchXml.Condition();\r\n    cond1.attribute = \"id\";\r\n    cond1.operator = \"eq\";\r\n    cond1.value = systemUserId;\r\n\r\n    filter.conditions.push(cond1);\r\n\r\n    fetchEntity.filter = filter;\r\n\r\n    var fetch = new MobileCRM.FetchXml.Fetch(fetchEntity);\r\n\r\n    fetch.executeAsync(null).then((result) => { // \"null\" stands for default \"DynamicEntities\" result format\r\n        if (result.length < 1) {\r\n            MobileCRM.bridge.alert(\"Not any order begins with 'Bike' and total amount grater than 1500 was found\");\r\n        }\r\n        else {\r\n            for (var i in result) {\r\n                var entity = result[i];\r\n                resolve(entity[0]);\r\n            }\r\n        }\r\n        // MobileCRM.bridge.alert(info);\r\n    }).catch((err) => {\r\n        MobileCRM.bridge.alert(err);\r\n    });\r\n}","import React from 'react';\r\nimport './style.scss';\r\nimport { useEffect } from 'react';\r\nimport qrcode from 'qrcode-js';\r\nimport classNames from 'classnames';\r\nimport executeAsync from 'fetchSample';\r\nimport { useState } from 'react';\r\n\r\nconst MobileCRM = window.MobileCRM;\r\n\r\nconst InspectorPopup = ({ visible, closePopup }) => {\r\n    const [qr, setQr] = useState(null);\r\n    const [organization, setOrganization] = useState(null);\r\n    const [mail, setMail] = useState(null);\r\n    useEffect(() => {\r\n        if(!qr) {\r\n            MobileCRM.Configuration.requestObject(\r\n                config => {\r\n                    let { settings } = config;\r\n                    const organizationName = settings.crmOrganization;\r\n                    const { systemUserId } = settings;\r\n                    executeAsync(systemUserId, mail => {\r\n                        let output = `url=https://inspections.resco.net/${organizationName}\\nusermode=0\\nusername=${mail}\\nsavepassword=1`;\r\n                        const base64 = qrcode.toDataURL(output, 4);\r\n                        setQr(base64);\r\n                        setMail(mail);\r\n                        setOrganization(organizationName);\r\n                    });\r\n                    return false;\r\n                },\r\n                err => {\r\n                    MobileCRM.bridge.alert(\"An error occurred: \" + err);\r\n                },\r\n                null\r\n            );\r\n        }\r\n        if(visible) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            setTimeout(() => {\r\n                document.body.style.overflow = 'initial';\r\n            }, 400);\r\n        }\r\n    }, [visible]);\r\n\r\n    const classList = classNames(\"inspector-popup__wrapper\", {\r\n        \"inspector-popup__wrapper--visible\": visible\r\n    })\r\n    return (\r\n        <div className={classList}>\r\n            <section className=\"inspector-popup\">\r\n                <div className=\"inspector-popup__qr\" style={{backgroundImage: `url(${qr})`}}></div>\r\n                <section className=\"inspector-popup__section\">\r\n                    <h1 className=\"inspector-popup__header inspector-popup--green\">Download the Resco Inspections mobile app</h1>\r\n                    <ul className=\"inspector-popup__list\">\r\n                        <li className=\"inspector-popup__list-item\">1. Download the mobile app for <a href=\"https://itunes.apple.com/ua/app/resco-inspections/id1357591626?mt=8\">iOS</a>, <a href=\"https://play.google.com/store/apps/details?id=net.resco.inspections\">Android</a> or <a href=\"https://www.microsoft.com/en-us/p/resco-inspections/9n4gsvt8bnfj\">Windows</a></li>\r\n                        <li className=\"inspector-popup__list-item\">2. Run the app</li>\r\n                        <li className=\"inspector-popup__list-item\">3. On the ‘Welcome to Resco Mobile CRM’ screen select ‘Internal User’</li>\r\n                        <li className=\"inspector-popup__list-item\">4. Enter the URL <span className=\"inspector-popup--green\">https://inspections.resco.net/{organization || 'organization'}</span>, username <span className=\"inspector-popup--green\">{mail || ''}</span>, and password</li>\r\n                    </ul>\r\n                    <p className=\"inspector-popup__paragraph\">…or simply hit the <span className=\"inspector-popup--green\">‘Scan QR’</span> button and scan the QR code.</p>\r\n                </section>\r\n                <i className=\"inspector-popup__close\" onClick={closePopup}></i>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InspectorPopup;","import React, { useEffect, useState } from 'react';\n\nimport { Card, CardsContainer, InspectorPopup } from 'components';\nimport executeAsync from 'fetchSample';\n\nconst MobileCRM = window.MobileCRM;\n\nfunction App() {\n  const [inspectorPopup, setInspectorPopup] = useState(false);\n\n  const listItems = [...window.parent.document.querySelectorAll('.alTextCellContent')];\n\n  useEffect(() => {\n  }, []);\n  const toggleInspectorPopup = () => {\n    inspectorPopup ? setInspectorPopup(false) : setInspectorPopup(true);\n  }\n\n\n  const handleHomeItem = selector => {\n    console.log(`Finding ${selector}, searching in items: ${listItems}`);\n    listItems.find(item => item.innerHTML === selector).click();\n    // MobileCRM.UI.HomeForm.openHomeItemAsync(selector, MobileCRM.bridge.alert, null);\n  }\n\n  return (\n    <>\n      <CardsContainer header=\"ALL MODULES\">\n        <Card onClick={handleHomeItem} homeItem=\"Questionnaire Designer\" iconSrc=\"icons/templates_designer.png\" header=\"Questionnaire Designer\" description=\"Build your questionnaires from scratch.\" />\n        <Card onClick={handleHomeItem} homeItem=\"Schedule Board\" iconSrc=\"icons/schedule_board.png\" header=\"Schedule Board\" description=\"Assign appointments to users, plan work for your field team, and see their progress.\" />\n\n        {/* Exception, doesn't open homeItem */}\n        <Card onClick={toggleInspectorPopup} iconSrc=\"icons/inspector.png\" header=\"Inspector\" description=\"App for executing inspections and filling out questionnaires in the field.\" />\n\n        <Card onClick={handleHomeItem} homeItem=\"Dashboard\" iconSrc=\"icons/automatic_dashboard.png\" header=\"Dashboard\" description=\"Evaluate and visualize the data sent back by the inspectors.\" />\n        <Card onClick={handleHomeItem} homeItem=\"Result Viewer\" iconSrc=\"icons/result_viewer.png\" header=\"Result Viewer\" description=\"Evaluate and visualize the data sent back by the inspectors.\" />\n        <Card onClick={handleHomeItem} homeItem=\"Submitted Reports\" iconSrc=\"icons/report_designer.png\" header=\"Submitted Reports\" description=\"Enables you to set up mobile reports that provide a clear-cut overview of your data.\" />\n        <Card onClick={handleHomeItem} homeItem=\"App Configurator\" iconSrc=\"icons/woodford.png\" header=\"App Configurator\" description=\"Customize the mobile app to fit your requirements.\" />\n        <Card onClick={handleHomeItem} homeItem=\"Manage Organization\" iconSrc=\"icons/admin_console.png\" header=\"Manage Organization\" description=\"Resco Cloud settings and customization.\" />\n      </CardsContainer>\n      <CardsContainer header=\"CONNECTORS\" description=\"Use connectors for Dynamics 365, Salesforce, or SAP, to take the full advantage of Inspections integrated with your own backend.\">\n        <Card href=\"mailto:sales@resco.net?subject=Connector for Resco Inspections: Dynamics CRM\" iconSrc=\"icons/dynamics.png\" header=\"Dynamics 365/CRM\" description=\"Use Inspections directly in your Dynamics 365 environment \" />\n        <Card href=\"mailto:sales@resco.net?subject=Connector for Resco Inspections: Salesforce\" iconSrc=\"icons/salesforce.png\" header=\"Salesforce\" description=\"Connect and work with your Salesforce data instantly and securely.\" />\n        <Card href=\"mailto:sales@resco.net?subject=Connector for Resco Inspections: SAP\" iconSrc=\"icons/sap.png\" header=\"SAP\" description=\"Connect to your ERP and work with your data.\" />\n      </CardsContainer>\n      {/* <InspectorPopup visible={inspectorPopup} closePopup={toggleInspectorPopup} /> */}\n    </>\n  );\n}\n\nexport default App;\n\n//Scheduler, My Dashboard, Submitted Reports, ","\r\nimport { createStore } from 'redux';\r\n\r\nconst rootReducer = (state = [], action) => {\r\n    const { data, type } = action;\r\n    switch (type) {\r\n        case \"LOAD_DATA\":\r\n            return {\r\n                ...state,\r\n                data\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nconst loadData = data => ({\r\n    type: \"LOAD_DATA\",\r\n    data\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport { loadData };\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport './global.scss';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}